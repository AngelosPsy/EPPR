?matrix
x <- matrix(c(134, 414, 211, 5523, 12, 4, 12, 55, 11, 22), nrow = 5, ncol = 2)
x
x[x[, 1] > 100, ]
x[x[, 1] > 100, 1]
x[x[, 1] > 200, 1]
library(dplyr)
install.packages("dplyr")
library(dplyr)
x %>% x>1
data.frame(x) %>% x>1
filter(x[, 1], >200)
filter(x, x[, 1]>200)
x
rownames(x) = c("ID1", "ID2")
colnames(x) = c("Question1", "Question2")
rownames(x) = paste0("ID", 1:5)
x
filter(x, Question1 > 100)
filter(data.frame(x), Question1 > 100)
x
?list
myList = list(myNums = 1:10, myChar = c("I like it", "not"), myMatrix = matrix(100:106, 3, 2))
myList = list(myNums = 1:10, myChar = c("I like it", "not"), myMatrix = matrix(100:105, 3, 2))
myList
myList[["myNums"]]
myList[[1]]
myList$myNums
myList = list(myNums = 1:10, myChar = c("I like it", "not"), myMatrix = matrix(100:105, 3, 2), "Error")
myList
myList = list(myNums = 1:10, myChar = c("I like it", "not"), myMatrix = matrix(100:105, 3, 2), "Bugg")
myList
myList$Error
myDF = data.frame(ID = 1:10, condition = c(1, 2, 1, 2, 2, 1, 1, 2, 1, 1),
Sex = c("M", "F", "M", "F", "M", "F", "M", "F", "M", "F"))
myDF
?tail
df <- data.frame(x = 1:3)
df$y <- list(1:2, 1:3, 1:4)
df
df
is(Df)
is(Df)
d
is(df)
myDF = data.frame(ID = 1:10, condition = c(1, 2, 1, 2, 2, 1, 1, 2),
Sex = c("M", "F", "M", "F", "M", "F", "M", "F", "M", "F"))
myDF$lf
myDF$lf = list(1, 2)
myDF
df <- data.frame(x = 1:3)
df$y <- list(1:2, 1:3, 1:4)
df
df$x
y
df$y
myDF$liz = list(1:3, 2, 1)
myDF = data.frame(ID = 1:10, condition = c(1, 2, 1, 2, 2, 1, 1, 2, 1, 1),
Sex = c("M", "F", "M", "F", "M", "F", "M", "F", "M", "F"))
myDF
head(myDF)
myDF$liz = list(1:3, 2, 1)
myDF$liz = as.character(list(1:3, 2, 1))
myDF$liz = list("1", "2")
myDF
tail(myDF, n = 2)
tail(myDF, n = 3)
?seq
matrix(c(1, 2, 1))
matrix(c(1, 2, 1, "ar", "re"))
matrix(c(T, T, T))
?string
??string
matrix(c(T, T, 1))
matrix(c(T, T, er))
matrix(c(T, T, "er"))
matrix(c(1, 2, "Man", "Woman"), 2, 2)
colmeans(d)
colMeans(d)
d
d = matrix(c(1, 2, "Man", "Woman"), 2, 2)
d
is(D)
is(d)
f
?factor
group <- c(1, 3, 1, 2)
factor(ggroup)
factor(group)
?as.numeric
as.numeric(factor(5:10))
numeric(factor(5:10))
as.numeric(factor(5:10))
numeric(factor(5:10))
as.factor(group)
group <- c(1, 3, 1, 2)
factor(group)
as.factor(group)
as.factor
factor
>- Feedback
>- Feedback
library(BayesFactor)
d = data.frame(ID = c(1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2), DV = c(.45, .43, .42, .4, .38, .4, .3, .45, .1, .11, .15, .2, .11, .3, .15, .13, .14))
ttestBF(d[, 2]~d[, 1])
d
d = data.frame(group = c(1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2), DV = c(.45, .43, .42, .4, .38, .4, .3, .45, .1, .11, .15, .2, .11, .3, .15, .13, .14))
ttestBF(d$DV~d$group)
ttestBF(d$DV[d$group == 1, ], d$DV[d$group==2)
ttestBF(d$DV[d$group == 1, ], d$DV[d$group==2, ])
ttestBF(d[d$group == 1, 2], d[d$group==2, 2])
x = ttestBF(d[d$group == 1, 2], d[d$group==2, 2], rscale)
x = ttestBF(d[d$group == 1, 2], d[d$group==2, 2])
x
extractBF(x)
extractBF(x)["bf"]
extractBF(x)["bf"][, 2]
extractBF(x)["bf"][2]
extractBF(x)["bf"]
as.numeric(extractBF(x)["bf"])
rs = seq(0, 5, .1)
y = numeric()
rs = seq(0, 5, .1)
for (i in ){
x = ttestBF(d[d$group == 1, 2], d[d$group==2, 2], rscale = rs[i])
y[i] = as.numeric(extractBF(x)["bf"])
}
y = numeric()
rs = seq(0, 5, .1)
for (i in ){
y = numeric()
rs = seq(0, 5, .1)
for (i in 1:length(rs)){
x = ttestBF(d[d$group == 1, 2], d[d$group==2, 2], rscale = rs[i])
y[i] = as.numeric(extractBF(x)["bf"])
}
rs[1]
y = numeric()
rs = seq(0.1, 5, .1)
for (i in 1:length(rs)){
x = ttestBF(d[d$group == 1, 2], d[d$group==2, 2], rscale = rs[i])
y[i] = as.numeric(extractBF(x)["bf"])
}
y
plot(y, type = "l")
y = numeric()
rs = seq(0.1, 10, .1)
for (i in 1:length(rs)){
x = ttestBF(d[d$group == 1, 2], d[d$group==2, 2], rscale = rs[i])
y[i] = as.numeric(extractBF(x)["bf"])
}
plot(y, type = "l")
plot(rs, y, type = "l")
library(BayesFactor)
d = data.frame(group = c(1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2), DV = c(.45, .43, .42, .4, .38, .4, .3, .45, .1, .11, .15, .2, .11, .3, .15, .13, .14))
y = numeric()
rs = seq(0.1, 10, .1)
for (i in 1:length(rs)){
x = ttestBF(d[d$group == 1, 2], d[d$group==2, 2], rscale = rs[i])
y[i] = 1/as.numeric(extractBF(x)["bf"])
}
plot(rs, y, type = "l")
library(BayesFactor)
d = data.frame(group = c(1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2), DV = c(.45, .43, .42, .4, .38, .4, .3, .45, .1, .11, .15, .2, .11, .3, .15, .13, .14))
y = numeric()
rs = seq(0.1, 10, .1)
for (i in 1:length(rs)){
x = ttestBF(d[d$group == 1, 2], d[d$group==2, 2], rscale = rs[i])
y[i] = as.numeric(extractBF(x)["bf"])
}
plot(rs, y, type = "l")
library(BayesFactor)
d = data.frame(group = c(1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2), DV = c(.45, .43, .42, .4, .38, .4, .3, .45, .1, .11, .15, .2, .11, .3, .15, .13, .14))
y = numeric()
rs = seq(0.1, 10, .1)
for (i in 1:length(rs)){
x = ttestBF(d[d$group == 1, 2], d[d$group==2, 2], rscale = rs[i])
y[i] = as.numeric(extractBF(x)["bf"])
}
plot(rs, y, type = "l", ylab = "BF10")
myCool.vector = c(1, 43, , 1, 5)
library(dplyr)
x <- matrix(c(134, 414, 211, 5523, 12, 4, 12, 55, 11, 22), nrow = 5, ncol = 2)
colnames(x) = c("Question1", "Question2")
rownames(x) = paste0("ID", 1:5)
filter(data.frame(x), Question1 > 100)
x <- matrix(c(134, 414, 211, 5523, 12, 4, 12, 55, 11, 22), nrow = 5, ncol = 2)
colnames(x) = c("Question1", "Question2")
rownames(x) = paste0("ID", 1:5)
x
x <- matrix(c(134, 414, 211, 5523, 12, 4, 12, 55, 11, 22), nrow = 5, ncol = 2)
colnames(x) <- c("Question1", "Question2")
rownames(x) <- paste0("ID", 1:5)
data.frame(x)
myCool.vector = c(1, 43, 3, 1, 5)
i_Like_Spiders <- c("Yes","No")
x=1:50
if(exists(x)){
something.stupid="something.stupid"
print(something.stupid)
}
?exists
exists(x)
exists("x")
myList = list()
myList
my.List <- list(CS = c("+", "-", "+"), Part = c("1", "2", "3"))
my.List
my.List <- list(CS = c("+", "-", "+"), Part = c("1", "2", "3"))
my.List$Part
mean(my.List$Part)
mean(as.numeric(my.List$Part))
c(1, 2, 3)
mean(c(1, 2, 3))
?list
?mean
??mean
help.search(mean)
help.search("mean")
apropos("mean")
apropos("be")
apropos("beef")
apropos("mode")
apropos("mean")
apropos("colMeans")
?rnorm
my.List <- list(CS = c("+", "-", "+"), Part = c("1", "2", "3"))
sample(x = 1:10, 2, replace = TRUE)
sample(x = 1:10, 2, replace = TRUE)
sample(x = 1:10, 2, replace = TRUE)
data.frame(my.List)
my.List = c(2, 4, 2)
my.List <- list(CS = c("+", "-", "+"), Part = c("1", "2", "3"))
my.List$RT = rnorm(3)
my.List$RN = rnorm(3)
data.frame(my.List)
d = data.frame(my.List)
d[, "RT"] d[, "CS"] d[, "RN"]
paste(d[, "RT"], d[, "CS"], d[, "RN"])
as.numeric(paste(d[, "RT"], d[, "CS"], d[, "RN"]))
as.numeric(as.character(paste(d[, "RT"], d[, "CS"], d[, "RN"])))
(paste(d[, "RT"], d[, "CS"], d[, "RN"]))
c(paste(d[, "RT"], d[, "CS"], d[, "RN"]))
eval(paste(d[, "RT"], d[, "CS"], d[, "RN"]))
my.List <- list(CS = c("+", "-", "+"), Part = c("1", "2", "3"))
my.List
x <- matrix(c(134, 414, 211, 5523), nrow = 2, ncol = 2)
table(x)
x <- matrix(c(134, 134, 211, 5523), nrow = 2, ncol = 2)
table(x)
x = c(T, R, T)
x
x = c(T, F, T)
x
c(mean(), median())
x = c(mean(), median())
x
.colMeans
colMeans
apropos("colMeans")
?apropos
apropos("lm")
getwd()
setwd("/css")
setwd("./css")
setwd("../css")
setwd(".../css")
setwd("/assets")
setwd("./assets")
getwd()
setwd("C:/Users/Krypo001/Dropbox/PostDocUU/eepR/lecture2")
