x
?repeat
install.packages('shiny')
shiny::runGitHub( "priorDemo", "richarddmorey")
install.packages("shinyjs")
shiny::runGitHub( "priorDemo", "richarddmorey")
install.packages("gridSVG")
shiny::runGitHub( "priorDemo", "richarddmorey")
library(shiny)
shiny::runGitHub( "priorDemo", "richarddmorey")
require(lattice)
require(stats)
require(shiny)
require("RColorBrewer")
require("SVGAnnotation")
install.packages("SVGAnnotation")
require("SVGAnnotation")
require("XML")
require(grImport)
require(shinyjs)
library(DiagrammeR)
DiagrammeR("
graph TD;
hw{Test Statement} -->TRUE;
hw -->FALSE;
TRUE -->Do something
FALSE -->Do something
")
for (i in 1:10){
print(i)
}
i = 1
while (i < 10){
print(i)
i = i + 1
}
i = 1
while (i < 10){
print(i)
i = i + 1
}
i = 1
while (i =< 10){
print(i)
i = i + 1
}
i = 1
while (i <= 10){
print(i)
i = i + 1
}
i <- 1
repeat{
print (i)
if(i > 10){
break
}
i = i + 1
}
i <- 1
repeat{
print (i)
if(i >= 10){
break
}
i = i + 1
}
?head
head(stats::ftable(Titanic))
dfx <- data.frame(
group = c(rep('A', 8), rep('B', 15),
rep('C', 6)),
sex = sample(c("M", "F"), size = 29, replace = TRUE),
age = runif(n = 29, min = 18, max = 54)
)
library(dplyr)
ddply(dfx, .(group, sex), summarize,
mean = round(mean(age), 2),
sd = round(sd(age), 2))
library(dplyr)
ddply(dfx, .(group, sex), summarize,
mean = round(mean(age), 2),
sd = round(sd(age), 2))
library(plyr)
ddply(dfx, .(group, sex), summarize,
mean = round(mean(age), 2),
sd = round(sd(age), 2))
?ddply
library(lattice)
attach(mtcars)
# create factors with value labels
gear.f<-factor(gear,levels=c(3,4,5),
labels=c("3gears","4gears","5gears"))
cyl.f <-factor(cyl,levels=c(4,6,8),
labels=c("4cyl","6cyl","8cyl"))
?densityplot
densityplot(~mpg,
main="Density Plot",
xlab="Miles per Gallon")
x <- 1:10
plot(x)
plot(x, type = "l")
plot(x, type = "p")
plot(x, type = "b")
x <- 1:10
layout(t(1:3))
plot(x)
plot(x, type = "l", col = "red")
plot(x, type = "b", col = "blue")
y <- 21:30
y
plot(x = 1:10, y = y)
require(devtools)
install_github("ramnathv/slidify")
install_github("ramnathv/slidifyLibraries")
?livrary
?library
?>aaxis
?axis
plot(x = 1:10, axes = FALSE)
axis(3)
axis(4, at = seq(0, 10, 5), labels = seq(0, 10, 5))
install.packages("googleVis")
install.packages("ggplot2")
install.packages("twitteR")
install.packages("NLP")
install.packages("tm")
install.packages("wordcloud")
install.packages("pander")
install.packages("xtable")
data(car)
library(psych)
library(psych)
data(galton)
describe(galton)
head(data)
head(galton)
?head
?describe
?galton
pairs.panels(galton,main="Galton's Parent child heights")
?pairs.panels
cor(parent, child, data = galton)
?cor
cor(galton$parent, galton$child)
cor.test(galton$parent, galton$child)
cor(galton$parent, galton$child)
cor.test(galton$parent, galton$child)
?psych::data
data(affect)
head(affect)
?affect
table(affect$Film)
lm(state1~state2, data = affect)
res <- lm(state1~state2, data = affect)
summary(res)
?lm
head(affect)
res <- lm(state1~state2*BDI, data = affect)
res <- lm(state1~state2:BDI, data = affect)
res <- lm(state1~state2*NA2, data = affect)
summary(res)
lm(state1~state2*NA2, data = affect)
summary(lm(state1~state2*NA2, data = affect))
summary(lm(state1~state2:NA2, data = affect))
summary(lm(state1~state2+NA2, data = affect))
lm(DV~IV1+IV2)
res <- lm(state1~state2:NA2, data = affect)
summary(res)
res <- lm(state1~state2+NA2, data = affect)
res
summary(res)
res <- lm(state1~state2*NA2, data = affect)
summary(res)
plot(res)
head(affect)
table(affect$maps)
table(affect$Study)
t.test(neur~Study, data = affect)
t.test(PA1, NA1, data = affect, paired = TRUE)
t.test(affect$PA1, affect$NA1, paired = TRUE)
boxplot(neur~Study, data = affect)
install.packages('ez')
library(ez, quietly = TRUE)
"
data("ANT")
head(ANT)
rt_anova = ezANOVA(
data = ANT[ANT$error==0,]
, dv = rt
, wid = subnum
, within = .(cue,flank)
, between = group
)
#Show the ANOVA and assumption tests.
print(rt_anova
print(rt_anova)
rt_anova = ezANOVA(
data = ANT,
dv = rt , wid = subnum ,
within = .(cue,flank),
between = group)
rt_anova = ezANOVA(
data = ANT,
dv = rt ,
wid = subnum,
within = .(cue),
between = group)
Performance<-c(2,3,3,2,3,1,2,2,1,1,3,1,3,2,3,2,1,2,1,2)
Dataset<-factor(c(1,2,3,4,5,1,2,3,4,5,1,2,3,4,5,1,2,3,4,5))
Classifier<-factor(c(1,1,1,1,1,2,2,2,2,2,3,3,3,3,3,4,4,4,4,4))
data<-data.frame(Classifier,Dataset,Performance)
ezANOVA(data=data, dv=.(Performance), within=.(Classifier), wid=.(Dataset), detailed=TRUE)
bilingual
data(bilingual)
??bilingual
head(ANT)
rt_anova = ezANOVA(
data = ANT,
dv = rt,
wid = subnum,
within = .(location),
between = group)
rt_anova = ezANOVA(
data = ANT,
dv = rt,
wid = subnum,
within = .(location))
rt_anova = ezANOVA(
data = ANT,
dv = rt,
wid = subnum,
within = .(flank, direction, location),
between = group)
rt_anova = ezANOVA(
data = ANT,
dv = rt,
wid = subnum,
within = .(flank, direction, location, trial),
between = group)
rt_anova = ezANOVA(
data = ANT,
dv = rt,
wid = subnum,
within = .(flank, direction, location),
between = group)
rt_anova = ezANOVA(
data = ANT,
dv = rt,
wid = subnum,
within = .(direction),
between = group)
rt_anova5a = ezANOVA(
data = ANT[ANT$error==0,]
, dv = rt2
, wid = subnum
, within = .(cue,flank)
, between = group
)
rt_anova5a = ezANOVA(
data = ANT[ANT$error==0,]
, dv = rt
, wid = subnum
, within = .(cue,flank)
, between = group
)
rt_anova = ezANOVA(
data = ANT[ANT$error==0,]
, dv = rt
, wid = subnum
, within = .(cue,flank)
, b
etween = group
)
rt_anova = ezANOVA(
data = ANT[ANT$error==0,]
, dv = rt
, wid = subnum
, within = .(cue,flank)
, between = group
)
?ezANOVA
res
res <- ezANOVA(              ### The function
data = ANT[ANT$error==0,],    ### The data to be used
dv = rt,                   ### The dependent variable
wid = subnum,              ### The subject factor
within = .(cue,flank),     ### Within subject variable
between = group,           ### group variablew
type = 3                    ### Ensure that results are comparable to SPSS results
)
res
library(BayesFactor)
apropos("BF")
ttestBF(neur~Study, data = affect)
?ttestBF
neur
library(BayesFactor)
data(affect)
library(BayesFactor)
ttestBF(neur~Study, data = affect)
ttestBF(neur, Study, data = affect)
names(affect)
ttestBF(data$neur, data$Study)
data$Study
ttestBF(data$neur~data$Study)
data$Study
ttestBF(affect$neur~affect$Study)
affect$Study
affect$neur
ttestBF(affect$neur~affect$Study)
data(sleep)
plot(extra ~ group, data = sleep)
ttestBF(extra ~ group, data = sleep)
head(affect)
ttestBF(affect$neur[affect$Study == "maps"], affect$neur[affect$Study == "maps"])
res = ttestBF(affect$neur[affect$Study == "maps"], affect$neur[affect$Study == "maps"])
aprops("BF")
apropos("BF")
?lmBF
lmBF(state1~state2+NA2, data = affect)
lmBF(state1~state2+NA2, data = na.omit(affect))
na.omit(affect)
na.rm(affect)
apropos("na")
lmBF(state1~state2+NA2, data = na.omit(affect))
head(affect)
lmBF(ext~Study, data = affect)
summary(lm(ext~Study, data = affect))
lmBF(ext~Study + PA1, data = affect)
lmBF(ext~Study : PA1, data = affect)
lmBF(ext~Study * PA1, data = affect)
lmBF(ext~Study, data = affect)
?anovaBF
res <- anovaBF(              ### The function
rt~cue * flank * group + ID, whichRandom = "ID",
data = ANT[ANT$error==0,],
progress = FALSE)
res <- anovaBF(rt~cue * flank * group + ID, whichRandom = "ID",
data = ANT,
progress = FALSE)
head(ANT)
res <- anovaBF(rt~cue * flank * group + subnum, whichRandom = "subnum",
data = ANT,
progress = FALSE)
anovaBF(rt~cue *  group + subnum, whichRandom = "subnum",
data = ANT, progress = T)
res <- anovaBF(rt ~ cue *  group + subnum, whichRandom = "subnum",
data = ANT, progress = FALSE)
library(condir)
library(condir)
x <- data.frame(ID = paste0("Part_", 1:2000), CS = 1:10, USExp = runif(2000, -5, 5))
x
head(x)
tapply(USExp, CS, mean)
tapply(x$USExp, x$CS, mean)
tapply(x$USExp, x$CS, std.error)
library(plotrix)
install.packages("plotrix")
library(plotrix)
tapply(x$USExp, x$CS, std.error)
library(ddply)
library(dplyr)
?ddply
ddply(x, .(USExp, CS), .(mean, std.error))
library(plyr)
ddply(x, .(USExp, CS), .(mean, std.error))
library(plyr); library(dplyr)
ddply(x, .(USExp, CS), .(mean, std.error))
??ddply
ddply(x, .(USExp, CS), summariz, mean = mean, std.error = std.error)
ddply(x, .(USExp, CS), summarize, mean = mean, std.error = std.error)
ddply(x, .(USExp, CS), summarize, mean = mean, std.error = sd)
x$CS
x$USExp
sapply(x$USExp, x$CS, mean)
ddply(x, .(USExp, CS), summarize, mean = mean, std.error = std.error)
ddply(x, .(USExp, CS), summarize, mean = mean)
d$USExp
x$USExp
x$CS
ddply(x$USExp, .(, CS), summarize, mean = mean)
ddply(x$USExp, .(CS), summarize, mean = mean)
ddply(x$USExp, x$CS, summarize, mean = mean)
?ddply
ddply(x$USExp, x$CS, summarise, mean = mean)
my.list <- list(Group = rep(1:2, each = 100), EMG1 = rnorm (200, 500, 50), EMG2 = rnorm (200, 480, 40))
my.df <- data.frame(my.list)
head(my.df)
my.df[, 1]
my.df[1]
is(my.df)
my.data.list <- list()
for (i in 1:100){
my.data.list[[i]] <- c(NA, rnorm(10000, mean = 600, sd = 50))
}
my.data.list
names(my.data.list)
lscale <- lapply(my.data.list, scale, scale = FALSE)
lscale[[1]]
lapply(my.data.list.center, mean, na.rm = T)
my.data.list.center<- lapply(my.data.list, scale, scale = FALSE)
lapply(my.data.list.center, mean, na.rm = T)
tapply(x$USExp, x$CS, mean)
barplot(barplot, col = 1:7, name.arg = 1:7, ylab = "CS Mean")
barplot(barz, col = 1:7, name.arg = 1:7, ylab = "CS Mean")
barz <- tapply(x$USExp, x$CS, mean)
barplot(barz, col = 1:7, name.arg = 1:7, ylab = "CS Mean")
?barplot
barplot(barz, col = 1:7, names.arg = 1:7, ylab = "CS Mean")
barplot(barz, col = 1:10, names.arg = 1:10, ylab = "CS Mean")
x <- c(0, 0, NA, 0, 1, 2, 3, 4, 5, NA, 5, 4, 3, 2, -1, -5)
y <- c(0, 0, NA, 0, -1, -2, -3, -4, -5, NA, -5, -5, -5, -5, -5, -5)
plot(x)
plot(x, type = "b")
plot(x, type = "b", pch = 15, xlab = "", ylab = "", axes = F)
points(y, type = "b", col = "red", pch = 19)
axis(1, paste(rep(c("H", "A", "E"), c(2, 6, 6)))
)
axis(1, paste(rep(c("H", "A", "E"), c(2, 6, 6), c(1:2, 1:6, 1:6)))
)
paste(rep(c("H", "A", "E"), c(2, 6, 6), c(1:2, 1:6, 1:6)))
axis(1, paste(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
rep(c("H", "A", "E"), c(2, 6, 6))
paste(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6))
axis(1, paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
axis(1, 1:14, paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
axis(1, c(1:2, NA, 4:10, NA, 12:18), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
axis(1, c(1:2,, 4:10, 12:18), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
axis(1, c(1:2, 4:10, 12:18), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
length( c(1:2, 4:10, 12:18))
length(paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
axis(1, c(1:2, 4:10, 12:16), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
plot(x, type = "b", pch = 15, xlab = "", ylab = "", axes = FALSE)
points(y, type = "b", col = "red", pch = 19)
axis(1, c(1:2, 4:10, 12:16), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
mtext(1, "Trials", font = 4)
mtext("Trials", 1, font = 4)
mtext("Trials", 1, font = 4)
?mtext
graphics::mtext("Trials", 1, font = 4)
graphics::mtext("Trials", 1, font = 4, cex = 3, line = 3)
graphics::mtext("Trials", 1, font = 4, cex = 2, line = 3)
plot(x, type = "b", pch = 15, xlab = "", ylab = "", axes = FALSE)
points(y, type = "b", col = "red", pch = 19)
axis(1, c(1:2, 4:10, 12:16), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
graphics::mtext("Trials", 1, font = 4, cex = 2.5, line = 3)
plot(x, type = "b", pch = 15, xlab = "", ylab = "", axes = FALSE)
points(y, type = "b", col = "red", pch = 19)
axis(1, c(1:2, 4:11, 13:16), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
graphics::mtext("Trials", 1, font = 4, cex = 2.5, line = 3)
axis(1, c(1:2, 4:11, 14:16), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
axis(1, c(1:2, 4:11, 14:17), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
plot(x, type = "b", pch = 15, xlab = "", ylab = "", axes = FALSE)
points(y, type = "b", col = "red", pch = 19)
axis(1, c(1:2, 4:11, 14:17), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
axis(1, c(1:2, 4:11, 12:16), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
plot(x, type = "b", pch = 15, xlab = "", ylab = "", axes = FALSE)
points(y, type = "b", col = "red", pch = 19)
axis(1, c(1:2, 4:11, 12:15), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
graphics::mtext("Trials", 1, font = 4, cex = 2.5, line = 3)
plot(x, type = "b", pch = 15, xlab = "", ylab = "", axes = FALSE)
points(y, type = "b", col = "red", pch = 19)
axis(1, c(1:2, 4:11, 13:16), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
graphics::mtext("Trials", 1, font = 4, cex = 2.5, line = 3)
axis(1, c(1:2, 4:9, 11:16), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
#' to step hints. But maybe first try to see how far you can go on your own.
plot(x, type = "b", pch = 15, xlab = "", ylab = "", axes = FALSE)
points(y, type = "b", col = "red", pch = 19)
axis(1, c(1:2, 4:9, 11:16), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
graphics::mtext("Trials", 1, font = 4, cex = 2.5, line = 3)
graphics::mtext("Fear Ratings", 2, font = 4, cex = 2.5, line = 3)
graphics::mtext("Fear Ratings", 2, font = 4, cex = 2.5, line = 2)
plot(x, type = "b", pch = 15, xlab = "", ylab = "", axes = FALSE)
points(y, type = "b", col = "red", pch = 19)
axis(1, c(1:2, 4:9, 11:16), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
axis(2, (-5, 0, 5), c(-5, 0, 5))
graphics::mtext("Fear Ratings", 2, font = 4, cex = 2.5, line = 2)
graphics::mtext("Trials", 1, font = 4, cex = 2.5, line = 3)
plot(x, type = "b", pch = 15, xlab = "", ylab = "", axes = FALSE)
points(y, type = "b", col = "red", pch = 19)
axis(1, c(1:2, 4:9, 11:16), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
axis(2, c(-5, 0, 5), c(-5, 0, 5))
graphics::mtext("Fear Ratings", 2, font = 4, cex = 2.5, line = 2)
graphics::mtext("Trials", 1, font = 4, cex = 2.5, line = 3)
axis(2, c(-5, 0, 5), c(-5, 0, 5), las = 1)
plot(x, type = "b", pch = 15, xlab = "", ylab = "", axes = FALSE)
points(y, type = "b", col = "red", pch = 19)
axis(1, c(1:2, 4:9, 11:16), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
axis(2, c(-5, 0, 5), c(-5, 0, 5), las = 1)
graphics::mtext("Fear Ratings", 2, font = 4, cex = 2.5, line = 2)
graphics::mtext("Trials", 1, font = 4, cex = 2.5, line = 3)
plot(x, type = "b", pch = 19, xlab = "", ylab = "", axes = FALSE)
points(y, type = "b", col = "red", pch = 15)
axis(1, c(1:2, 4:9, 11:16), paste0(rep(c("H", "A", "E"), c(2, 6, 6)), c(1:2, 1:6, 1:6)))
axis(2, c(-5, 0, 5), c(-5, 0, 5), las = 1)
graphics::mtext("Fear Ratings", 2, font = 4, cex = 2.5, line = 2)
graphics::mtext("Trials", 1, font = 4, cex = 2.5, line = 3)
apply(my.df, 1, diff)
apply(my.df[, 2:3], 1, diff)
my.df$EMDiff <- apply(my.df[, 2:3], 1, diff)
my.df$EMDiff
head(my.df)
548.6919  - 542.0812
apply(my.df[, 2:3], 2, median)
apply(my.df[, 2:3], 2, median(log))
apply(my.df[, 2:3], 2, median(log(x)))
apply(my.df[, 2:3], 2, function(x) median(log(x)))
apply(log(my.df[, 2:3]), 2, function(x) median)
apply(log(my.df[, 2:3]), 2, function(x) median)
apply(log(my.df[, 2:3]), 2, median)
apply(my.df[, 2:3], 2, function(x) median(log(x)))
